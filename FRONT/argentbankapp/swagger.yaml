swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

  /accounts:
    get:
    security:
      - Bearer: []
    tags:
      - Account Module
    summary: Get all accounts for authenticated user
    produces:
      - application/json
    responses:
      '200':
        description: All accounts retrieved successfully
        schema:
          $ref: '#/definitions/Accounts'
      '401':
        description: Unauthorized request
      '500':
        description: Internal Server Error

    post:
    security:
      - Bearer: []
    tags:
      - Account Module
    summary: Create a new account for authenticated user
    description: |
      Creates a new account for the authenticated user. Returns the newly created account.
    parameters:
      - in: body
        name: body
        description: Account attributes
        required: true
        schema:
          $ref: '#/definitions/Accounts'
    produces:
      - application/json
    responses:
      '201':
        description: Account created successfully
        schema:
          $ref: '#/definitions/Account'
      '400':
        description: Invalid request
      '401':
        description: Unauthorized request
      '500':
        description: Internal Server Error

  /accounts/{id}:
    get:
    security:
      - Bearer: []
    tags:
      - Account Module
    summary: Get account details by ID for authenticated user
    parameters:
      - in: path
        name: id
        description: ID of the account to retrieve
        required: true
        type: integer
      - in: query
        name: includeTransactions
        description: |
          Whether to include transaction details for the account. If true, the response will
          include a "transactions" property containing an array of transaction objects.
        required: false
        type: boolean
    produces:
      - application/json
    responses:
      '200':
        description: Account retrieved successfully
        schema:
          $ref: '#/definitions/ApiResponseSingleAccount'
      '401':
        description: Unauthorized request
      '404':
        description: Account not found
      '500':
        description: Internal Server Error

    put:
    security:
      - Bearer: []
    tags:
      - Account Module
    summary: Update account details by ID for authenticated user
    parameters:
      - in: path
        name: id
        description: ID of the account to update
        required: true
        type: integer
      - in: body
        name: body
        description: Account attributes to update
        required: true
        schema:
          $ref: '#/definitions/Account'
    produces:
      - application/json
    responses:
      '200':
        description: Account updated successfully
        schema:
          $ref: '#/definitions/ApiResponseSingleAccount'
      '400':
        description: Invalid request
      '401':
        description: Unauthorized request
      '404':
        description: Account not found
      '500':
        description: Internal Server Error

    delete:
    security:
      - Bearer: []
    tags:
      - Account Module
    summary: Delete account by ID for authenticated user
    parameters:
      - in: path
        name: id
        description: ID of the account to delete
        required: true
        type: integer
    produces:
      - application/json
    responses:
      '204':
        description: Account deleted successfully
      '401':
        description: Unauthorized request
      '404':
        description: Account not found
      '500':
        description: Internal Server Error


  /transactions:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Transactions API
      description: API for fetching transactions within a specified date range
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: query
          name: start_date
          description: Start date of transactions to fetch (YYYY-MM-DD)
          required: true
          type: string
        - in: query
          name: end_date
          description: End date of transactions to fetch (YYYY-MM-DD)
          required: true
  /transactions/{id}:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Retrieve a specific transaction by ID
      description: |
        Retrieves the transaction with the specified ID.
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          schema:
            type: string
        - in: path
          name: id
          description: ID of the transaction to retrieve
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Returns the transaction with the specified ID
          content:
            application/json:
              schema:
                $ref: '#/definitions/Transaction'
        '401':
          description: Unauthorized, authentication token is missing or invalid
        '404':
          description: Transaction not found with the specified ID

    put:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Update a specific transaction by ID
      description: |
        Updates the transaction with the specified ID.
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          schema:
            type: string
        - in: path
          name: id
          description: ID of the transaction to update
          required: true
          schema:
            type: integer
            format: int64
        - in: body
          name: body
          description: Transaction object containing updated information
          required: true
          schema:
            $ref: '#/definitions/TransactionInput'
      responses:
        '200':
          description: Returns the updated transaction
          content:
            application/json:
              schema:
                $ref: '#/definitions/Transaction'
        '400':
          description: Invalid request body
        '401':
          description: Unauthorized, authentication token is missing or invalid
        '404':
          description: Transaction not found with the specified ID

  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
  Accounts:
    type: object
    properties:
      accountId:
        type: integer
      accountName:
        type: string
        description: Account name
      balance:
        type: integer
        description: Account balance
    required:
      - accountName
      - balance